buildscript {
    ext {
        springBootVersion = '2.1.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'otus.spring.2018-11'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

ext {
    openCsvVersion = '4.4'
    spockVersion = '1.2-groovy-2.5'
    groovyVersion = '2.5.5'
    commonsIoVersion = '2.6'
    springShellVersion = '2.0.1.RELEASE'
    junitJupiterVersion = '5.3.2'
    junitVintageVersion = '5.3.2'
}

dependencies {
    implementation(
        "com.opencsv:opencsv:${openCsvVersion}",
        "commons-io:commons-io:${commonsIoVersion}",
        'org.springframework.boot:spring-boot-starter',
        "org.springframework.shell:spring-shell-starter:${springShellVersion}"
    )
    testImplementation(
        "org.spockframework:spock-core:${spockVersion}",
        "org.spockframework:spock-spring:${spockVersion}",
        "org.codehaus.groovy:groovy-all:${groovyVersion}",
        'org.springframework.boot:spring-boot-starter-test',
        "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    )
    testRuntimeOnly(
        "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}",
        "org.junit.vintage:junit-vintage-engine:${junitVintageVersion}"
    )
}

test {
    useJUnitPlatform()
}

clean.doFirst {
    delete "out"
}

bootJar {
    archiveName = "${project.name}.${extension}"
}
